#!/usr/bin/env python3
from http.server import HTTPServer, BaseHTTPRequestHandler
from  urllib.parse import parse_qs, urlparse
import argparse
import subprocess

allowed_schemes = ["http", "https"]
allowed_hostnames = ["localhost", "127.0.0.1","github.com"]

class OpenURLHandler(BaseHTTPRequestHandler):
    def do_POST(self):
        if self.path != '/open':
            self.respond(404)
            return

        content_length = int(self.headers['Content-Length'])
        post_data = self.rfile.read(content_length).decode('utf-8')
        form_data = parse_qs(post_data)

        if not 'url' in form_data:
            self.respond(400)
            return

        url = form_data['url'][0]
        url_parsed = urlparse(url)

        if not url_parsed.scheme in allowed_schemes:
            self.respond(422)
            return
        if not url_parsed.hostname in allowed_hostnames:
            self.respond(422)
            return

        try:
            subprocess.run(['open', url])
            self.respond(200)
            return
        except Exception as e:
            self.respond(500)
            return

    def respond(self, code):
        self.send_response(code)
        self.end_headers()

def run_server(port):
    server_address = ('', port)
    httpd = HTTPServer(server_address, OpenURLHandler)
    print(f"Listening for remote opens on port {port}")
    httpd.serve_forever()

if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('--port', default=8765, type=int, help='Port to listen on')
    args = parser.parse_args()
    run_server(args.port)
